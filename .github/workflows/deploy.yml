name: Build & Deploy crud to K3s

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: almuko/crud   # ðŸ‘ˆ Ñ‚Ð²Ð¾Ð¹ DockerHub Ñ€ÐµÐ¿Ð¾Ð·Ð¸Ñ‚Ð¾Ñ€Ð¸Ð¹

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo again
        uses: actions/checkout@v3

      - name: Set up Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > kubeconfig.yaml
          mkdir -p ~/.kube
          mv kubeconfig.yaml ~/.kube/config
          kubectl version --client
          kubectl cluster-info

      - name: Create namespace (idempotent)
        run: |
          kubectl create namespace crud --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply Kubernetes manifests
        run: |
          kubectl -n crud apply -f k3s/namespace.yaml
          kubectl -n crud apply -f k3s/secret.yaml
          kubectl -n crud apply -f k3s/configmap-app.yaml
          kubectl -n crud apply -f k3s/deployment.yaml
          kubectl -n crud apply -f k3s/service.yaml
          if [ -f k3s/ingress.yaml ]; then
            kubectl -n crud apply -f k3s/ingress.yaml
          fi

      - name: Debug resources
        run: |
          kubectl -n crud get all
          kubectl -n crud describe deploy crud

      - name: Verify rollout status
        run: |
          kubectl rollout status deployment/crud -n crud --timeout=120s
